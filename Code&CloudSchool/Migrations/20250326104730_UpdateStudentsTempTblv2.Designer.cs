// <auto-generated />
using System;
using Code_CloudSchool.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Code_CloudSchool.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250326104730_UpdateStudentsTempTblv2")]
    partial class UpdateStudentsTempTblv2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Code_CloudSchool.Models.Classes", b =>
                {
                    b.Property<int>("classID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("classID"));

                    b.Property<string>("classDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("classEndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("className")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("classTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("classID");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("Code_CloudSchool.Models.Courses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClassesclassID")
                        .HasColumnType("integer");

                    b.Property<int>("courseCode")
                        .HasColumnType("integer");

                    b.Property<string>("courseDescription")
                        .HasColumnType("text");

                    b.Property<string>("courseName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClassesclassID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Code_CloudSchool.Models.Lecturers", b =>
                {
                    b.Property<int>("lecturersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("lecturersId"));

                    b.Property<int?>("ClassesclassID")
                        .HasColumnType("integer");

                    b.HasKey("lecturersId");

                    b.HasIndex("ClassesclassID");

                    b.ToTable("Lecturers");
                });

            modelBuilder.Entity("Code_CloudSchool.Models.Majors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreditsRequired")
                        .HasColumnType("integer");

                    b.Property<string>("MajorCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MajorDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MajorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Majors");
                });

            modelBuilder.Entity("Code_CloudSchool.Models.Students", b =>
                {
                    b.Property<int>("StudentNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StudentNumber"));

                    b.Property<int?>("ClassesclassID")
                        .HasColumnType("integer");

                    b.Property<int?>("MajorsId")
                        .HasColumnType("integer");

                    b.HasKey("StudentNumber");

                    b.HasIndex("ClassesclassID");

                    b.HasIndex("MajorsId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("CoursesMajors", b =>
                {
                    b.Property<int>("CoursesId")
                        .HasColumnType("integer");

                    b.Property<int>("MajorsId")
                        .HasColumnType("integer");

                    b.HasKey("CoursesId", "MajorsId");

                    b.HasIndex("MajorsId");

                    b.ToTable("MajorCourses", (string)null);
                });

            modelBuilder.Entity("CoursesStudents", b =>
                {
                    b.Property<int>("CoursesId")
                        .HasColumnType("integer");

                    b.Property<int>("StudentsStudentNumber")
                        .HasColumnType("integer");

                    b.HasKey("CoursesId", "StudentsStudentNumber");

                    b.HasIndex("StudentsStudentNumber");

                    b.ToTable("CoursesStudents");
                });

            modelBuilder.Entity("Code_CloudSchool.Models.Courses", b =>
                {
                    b.HasOne("Code_CloudSchool.Models.Classes", null)
                        .WithMany("Courses")
                        .HasForeignKey("ClassesclassID");
                });

            modelBuilder.Entity("Code_CloudSchool.Models.Lecturers", b =>
                {
                    b.HasOne("Code_CloudSchool.Models.Classes", null)
                        .WithMany("Lecturers")
                        .HasForeignKey("ClassesclassID");
                });

            modelBuilder.Entity("Code_CloudSchool.Models.Students", b =>
                {
                    b.HasOne("Code_CloudSchool.Models.Classes", null)
                        .WithMany("Students")
                        .HasForeignKey("ClassesclassID");

                    b.HasOne("Code_CloudSchool.Models.Majors", null)
                        .WithMany("Students")
                        .HasForeignKey("MajorsId");
                });

            modelBuilder.Entity("CoursesMajors", b =>
                {
                    b.HasOne("Code_CloudSchool.Models.Courses", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Code_CloudSchool.Models.Majors", null)
                        .WithMany()
                        .HasForeignKey("MajorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoursesStudents", b =>
                {
                    b.HasOne("Code_CloudSchool.Models.Courses", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Code_CloudSchool.Models.Students", null)
                        .WithMany()
                        .HasForeignKey("StudentsStudentNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Code_CloudSchool.Models.Classes", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Lecturers");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Code_CloudSchool.Models.Majors", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
